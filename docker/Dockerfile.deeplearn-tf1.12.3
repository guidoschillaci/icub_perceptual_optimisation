# re-adapted from https://github.com/robotology/icub-hri/blob/master/docker/Dockerfile
FROM tensorflow/tensorflow:1.12.3-gpu-py3

RUN apt-get install -y lsb-release
RUN echo `lsb_release -cs`
ARG GIT_BRANCH=devel

RUN sh -c 'echo "deb http://www.icub.org/ubuntu `lsb_release -cs` contrib/science" > /etc/apt/sources.list.d/icub.list'
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 57A5ACB6110576A6

RUN apt-get update -y
RUN apt-get install -y apt-transport-https ca-certificates gnupg software-properties-common wget

RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add -
RUN apt-add-repository "deb https://apt.kitware.com/ubuntu/ `lsb_release -cs` main"
#RUN apt-get install -y kitware-archive-keyring 
#RUN apt-key --keyring /etc/apt/trusted.gpg del C1F34CDD40CD72DA

#RUN add-apt-repository ppa:timsc/swig-3.0.12
RUN apt-get update -y

RUN apt-get install -y  git \
        build-essential \
        cmake \
        clang \
        ccache \
        swig
     
# opencv
RUN apt-get install -y libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev \
    libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev  libdc1394-22-dev

RUN apt-get install -y python3 python3-dev

RUN apt-get install -y wget libssl-dev nano

RUN apt-get install -y git libeigen3-dev libace-dev libedit-dev
RUN apt-get install -y qtbase5-dev qtdeclarative5-dev qtmultimedia5-dev \
  qml-module-qtquick2 qml-module-qtquick-window2 \
  qml-module-qtmultimedia qml-module-qtquick-dialogs \
  qml-module-qtquick-controls

# Support  HW Acceleration for Intel gpu
RUN apt-get install -y \
        libgl1-mesa-glx \
        libgl1-mesa-dri \
        mesa-utils

# icub sim dependecies
RUN apt-get install -y  coinor-libipopt-dev libgsl0-dev freeglut3-dev

# opencv dependencies
RUN apt-get install -y libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev \
    libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev  libdc1394-22-dev  libpopt-dev

RUN pip3 install numpy scipy matplotlib scikit-image scikit-learn ipython 

RUN mkdir /projects
RUN cd /projects && git clone https://github.com/opencv/opencv.git && cd opencv && git checkout 3.4.10
RUN cd /projects && git clone https://github.com/opencv/opencv_contrib.git && cd opencv_contrib && git checkout 3.4.10
RUN cd /projects/opencv && \
    mkdir build && cd build && \
    cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
          -D WITH_TBB=ON \
          -D WITH_V4L=ON \
          -D WITH_QT=ON \
          -D WITH_OPENGL=ON \
          ..  && \
    make -j`nproc` && make install && \
    cd

RUN apt-get install -y libglu1-mesa-dev freeglut3-dev mesa-common-dev  libwebp-dev libtiff5-dev
#RUN apt-get install -y mesa-utils freeglut3 libode-dev libsdl1.2-dev libgtk2.0-dev
RUN apt-get install -y mesa-utils freeglut3 libsdl1.2-dev libgtk2.0-dev


ENV PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.5/dist-packages/:

# Some QT-Apps don't show controls without this
ENV QT_X11_NO_MITSHM 1

RUN apt-get install -y autoconf

# gpu support
RUN cd /projects && \
  git clone https://github.com/NVIDIA/libglvnd.git && \
  cd libglvnd && \
  git reset --hard 9d909106f232209cf055428cae18387c18918704 && \
  bash autogen.sh && bash configure && make -j`nproc` && \
  make install
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=all
ENV CUDA_HOME=/usr/local/cuda-9.0/

RUN apt install -y python3-tk 
RUN apt install -y graphviz
RUN pip3 install pydot

RUN pip3 install keract

# CLEANUP
RUN rm -rf /var/lib/apt/lists/*e

RUN alias python=python3

# Enable ccache, for faster recompilation
ENV PATH=/usr/lib/ccache:$PATH



